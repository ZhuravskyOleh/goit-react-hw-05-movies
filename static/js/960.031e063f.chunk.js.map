{"version":3,"file":"static/js/960.031e063f.chunk.js","mappings":"+SACMA,EAAW,gCACXC,EAAU,2CAMT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8GAE+BC,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,8BAAkCC,IAFtE,cAEcG,EAFd,yBAGeA,EAASC,KAAKC,SAH7B,gCAKQC,QAAQC,IAAR,MALR,wFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,iGAEgCP,EAAAA,EAAAA,GAAM,GAAD,OAAKH,EAAL,wBAA+BC,EAA/B,kBAAkDS,EAAlD,+CAFrC,cAEeN,EAFf,yBAGgBA,EAASC,KAAKC,SAH9B,gCAKSC,QAAQC,IAAR,MALT,wFASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,2BAA0CX,IAF/E,cAEeG,EAFf,yBAGgBA,EAASC,MAHzB,gCAKSE,QAAQC,IAAR,MALT,wFASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,mCAAkDX,IAFvF,cAEeG,EAFf,yBAGgBA,EAASC,KAAKS,MAH9B,gCAMSP,QAAQC,IAAR,MANT,wFAUA,SAAeO,EAAtB,kC,aAAO,O,oBAAA,WAA2BH,GAA3B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,0CAAyDX,IAF9F,cAEeG,EAFf,yBAGgBA,EAASC,KAAKC,SAH9B,gCAMSC,QAAQC,IAAR,MANT,gF,8ECZP,UA5BgB,WACZ,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQN,GAAOO,EAAAA,EAAAA,MAAPP,GAMR,OAJAQ,EAAAA,EAAAA,YAAU,YACNL,EAAAA,EAAAA,IAAYH,GAAIS,KAAKH,EACxB,GAAE,CAACN,IAEkB,IAAlBK,EAAOK,QACA,kDAGP,eAAIC,UAAU,aAAd,SACKN,EAAOO,KAAI,gBAAGZ,EAAH,EAAGA,GAAIa,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OACR,gBAAIH,UAAU,kBAAd,WACI,wBAAKG,KACL,uBAAID,MAF6Bb,EAD7B,KAQvB,C","sources":["components/API/API.js","components/Revievs/Revievs.jsx"],"sourcesContent":["import axios from \"axios\";\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'api_key=5fb6b6af9200a303174c78f9afda4cb6'\n\n// export const FetchTrends = () => {\n//         return fetch(`${BASE_URL}trending/movie/day?${API_KEY}`)\n//                 .then(res => res.json());\n// };\nexport async function FetchTrends() {\n       try {\n               const response = await axios(`${BASE_URL}trending/movie/day?${API_KEY}`);\n               return response.data.results;\n       } catch (error) {\n               console.log(error);\n        };\n};\n\nexport async function FetchFilm(searchValue) {\n        try {\n                const response = await axios(`${ BASE_URL }search/movie?${ API_KEY }&query=${ searchValue }&include_adult=false&language=en-US&page=1`);\n                return response.data.results;\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchDetails(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}?language=en-US&${API_KEY}`);\n                return response.data;\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchCasts(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}/credits?language=en-US&${API_KEY}`);\n                return response.data.cast;\n\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchReview(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}/reviews?language=en-US&page=1&${API_KEY}`);\n                return response.data.results;\n\n        } catch (error) {\n                console.log(error);\n        }\n}\n\n\n// https://api.themoviedb.org/3/movie/12/reviews?language=en-US&page=1\n\n\n\n\n\n\n\n\n\n\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { FetchReview } from \"components/API/API\";\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n    const [reviev, setReviev] = useState([]);\n    const { id } = useParams();\n\n    useEffect(() => {\n        FetchReview(id).then(setReviev);\n    }, [id]);\n\n    if (reviev.length === 0) {\n        return <div>There is no reviews</div>\n    }\n    return (\n        <ul className=\"list-group\">\n            {reviev.map(({ id, content, author }) => (\n                <li className=\"list-group-item\" key={id}>\n                    <h5>{author}</h5>\n                    <p>{content}</p>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nReviews.propTypes = {\n    content: PropTypes.string,\n    author: PropTypes.string,\n};\n\nexport default Reviews;"],"names":["BASE_URL","API_KEY","FetchTrends","axios","response","data","results","console","log","FetchFilm","searchValue","FetchDetails","id","FetchCasts","cast","FetchReview","useState","reviev","setReviev","useParams","useEffect","then","length","className","map","content","author"],"sourceRoot":""}