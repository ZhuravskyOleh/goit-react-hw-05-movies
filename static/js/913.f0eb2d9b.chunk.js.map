{"version":3,"file":"static/js/913.f0eb2d9b.chunk.js","mappings":"+SACMA,EAAW,gCACXC,EAAU,2CAMT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8GAE+BC,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,8BAAkCC,IAFtE,cAEcG,EAFd,yBAGeA,EAASC,KAAKC,SAH7B,gCAKQC,QAAQC,IAAR,MALR,wFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,iGAEgCP,EAAAA,EAAAA,GAAM,GAAD,OAAKH,EAAL,wBAA+BC,EAA/B,kBAAkDS,EAAlD,+CAFrC,cAEeN,EAFf,yBAGgBA,EAASC,KAAKC,SAH9B,gCAKSC,QAAQC,IAAR,MALT,wFASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,2BAA0CX,IAF/E,cAEeG,EAFf,yBAGgBA,EAASC,MAHzB,gCAKSE,QAAQC,IAAR,MALT,wFASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,mCAAkDX,IAFvF,cAEeG,EAFf,yBAGgBA,EAASC,KAAKS,MAH9B,gCAMSP,QAAQC,IAAR,MANT,wFAUA,SAAeO,EAAtB,kC,aAAO,O,oBAAA,WAA2BH,GAA3B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,0CAAyDX,IAF9F,cAEeG,EAFf,yBAGgBA,EAASC,KAAKC,SAH9B,gCAMSC,QAAQC,IAAR,MANT,gF,2EC3CMQ,EAAY,SAAC,GAAY,IAAXX,EAAU,EAAVA,KACvB,OACI,wBACKA,GAAQA,EAAKY,KAAI,gBAAEL,EAAF,EAAEA,GAAIM,EAAN,EAAMA,MAAN,OAAiB,yBAAa,SAAC,KAAD,CAAMC,GAAE,kBAAaP,GAArB,SAA4BM,KAAhCN,EAA1B,KAG7B,C,8ECUD,UAZkB,WACd,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACNrB,EAAAA,EAAAA,MAAcsB,KAAKF,EACxB,GAAE,KAGG,SAAC,IAAD,CAAWjB,KAAOgB,GAEzB,C","sources":["components/API/API.js","components/MovieList/MovieList.jsx","components/Pages/HomePage.jsx"],"sourcesContent":["import axios from \"axios\";\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'api_key=5fb6b6af9200a303174c78f9afda4cb6'\n\n// export const FetchTrends = () => {\n//         return fetch(`${BASE_URL}trending/movie/day?${API_KEY}`)\n//                 .then(res => res.json());\n// };\nexport async function FetchTrends() {\n       try {\n               const response = await axios(`${BASE_URL}trending/movie/day?${API_KEY}`);\n               return response.data.results;\n       } catch (error) {\n               console.log(error);\n        };\n};\n\nexport async function FetchFilm(searchValue) {\n        try {\n                const response = await axios(`${ BASE_URL }search/movie?${ API_KEY }&query=${ searchValue }&include_adult=false&language=en-US&page=1`);\n                return response.data.results;\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchDetails(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}?language=en-US&${API_KEY}`);\n                return response.data;\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchCasts(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}/credits?language=en-US&${API_KEY}`);\n                return response.data.cast;\n\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchReview(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}/reviews?language=en-US&page=1&${API_KEY}`);\n                return response.data.results;\n\n        } catch (error) {\n                console.log(error);\n        }\n}\n\n\n// https://api.themoviedb.org/3/movie/12/reviews?language=en-US&page=1\n\n\n\n\n\n\n\n\n\n\n","import { Link } from \"react-router-dom\"\n\nexport const MovieList = ({data}) => {\n    return (\n        <ol>\n           { data && data.map(({id, title}) => <li key={id}><Link to={`/movies/${id}`}>{title}</Link></li>)}\n        </ol>\n    )\n}","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { FetchTrends } from \"components/API/API\";\nimport { MovieList } from \"components/MovieList/MovieList\";\n\n\n const HomePage = () => {\n    const [movies, setMovies] = useState([]);\n    \n    useEffect(() => {\n        FetchTrends().then(setMovies)   \n  }, []);\n\n    return (\n        <MovieList data={ movies } />\n    );\n};\n\nexport default HomePage;"],"names":["BASE_URL","API_KEY","FetchTrends","axios","response","data","results","console","log","FetchFilm","searchValue","FetchDetails","id","FetchCasts","cast","FetchReview","MovieList","map","title","to","useState","movies","setMovies","useEffect","then"],"sourceRoot":""}