{"version":3,"file":"static/js/853.0f2b06b4.chunk.js","mappings":"+SACMA,EAAW,gCACXC,EAAU,2CAMT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8GAE+BC,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,8BAAkCC,IAFtE,cAEcG,EAFd,yBAGeA,EAASC,KAAKC,SAH7B,gCAKQC,QAAQC,IAAR,MALR,wFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,iGAEgCP,EAAAA,EAAAA,GAAM,GAAD,OAAKH,EAAL,wBAA+BC,EAA/B,kBAAkDS,EAAlD,+CAFrC,cAEeN,EAFf,yBAGgBA,EAASC,KAAKC,SAH9B,gCAKSC,QAAQC,IAAR,MALT,wFASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,2BAA0CX,IAF/E,cAEeG,EAFf,yBAGgBA,EAASC,MAHzB,gCAKSE,QAAQC,IAAR,MALT,wFASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,mCAAkDX,IAFvF,cAEeG,EAFf,yBAGgBA,EAASC,KAAKS,MAH9B,gCAMSP,QAAQC,IAAR,MANT,wFAUA,SAAeO,EAAtB,kC,aAAO,O,oBAAA,WAA2BH,GAA3B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,0CAAyDX,IAF9F,cAEeG,EAFf,yBAGgBA,EAASC,KAAKC,SAH9B,gCAMSC,QAAQC,IAAR,MANT,gF,oFC3CMQ,EAAY,SAAC,GAAc,IAAZX,EAAW,EAAXA,KAClBY,GAAWC,EAAAA,EAAAA,MACjB,OACI,wBACKb,GAAQA,EAAKc,KAAI,gBAAEP,EAAF,EAAEA,GAAIQ,EAAN,EAAMA,MAAN,OAAiB,yBAAa,SAAC,KAAD,CAAMC,GAAE,kBAAaT,GAAMU,MAAO,CAACC,KAAMN,GAAzC,SAAqDG,KAAzDR,EAA1B,KAG7B,C,sFCmDD,UAvDe,WACb,OAA4BY,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BC,EAAAA,EAAAA,MAA1B,eAAOC,EAAP,KAAcC,EAAd,KAqBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcH,EAAMI,IAAI,SAC1BD,IAAatB,EAAAA,EAAAA,IAAUsB,GAAaE,KAAKP,GACxCK,IACHL,EAAU,MACVG,EAAS,CAAC,GAEb,GAAE,CAACD,EAAOC,KAYT,+BACE,kBAAMK,UAAU,UAAUC,SAX9B,SAAsBC,GACpBA,EAAEC,iBACFR,EAAS,CACPD,MAAOQ,EAAEE,cAAcC,SAASC,OAAOC,QAEzCL,EAAEE,cAAcI,OACjB,EAKG,WACE,iBAAKR,UAAU,WAAf,WACE,kBAAOS,QAAQ,cAAcT,UAAU,kBAAvC,0BAGA,kBACEU,aAAa,MACbC,KAAK,OACLX,UAAU,eACVtB,GAAG,cACHkC,YAAY,cACZC,KAAK,eAGT,gBAAKb,UAAU,WAAf,UACE,mBAAQW,KAAK,SAASX,UAAU,uBAAhC,uBAIK,OAANT,QAAM,IAANA,OAAA,EAAAA,EAAQuB,QAAS,IAClB,iCACE,6CACA,SAAC,IAAD,CAAW3C,KAAMoB,WAM1B,C","sources":["components/API/API.js","components/MovieList/MovieList.jsx","components/Pages/Movie.jsx"],"sourcesContent":["import axios from \"axios\";\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'api_key=5fb6b6af9200a303174c78f9afda4cb6'\n\n// export const FetchTrends = () => {\n//         return fetch(`${BASE_URL}trending/movie/day?${API_KEY}`)\n//                 .then(res => res.json());\n// };\nexport async function FetchTrends() {\n       try {\n               const response = await axios(`${BASE_URL}trending/movie/day?${API_KEY}`);\n               return response.data.results;\n       } catch (error) {\n               console.log(error);\n        };\n};\n\nexport async function FetchFilm(searchValue) {\n        try {\n                const response = await axios(`${ BASE_URL }search/movie?${ API_KEY }&query=${ searchValue }&include_adult=false&language=en-US&page=1`);\n                return response.data.results;\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchDetails(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}?language=en-US&${API_KEY}`);\n                return response.data;\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchCasts(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}/credits?language=en-US&${API_KEY}`);\n                return response.data.cast;\n\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchReview(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}/reviews?language=en-US&page=1&${API_KEY}`);\n                return response.data.results;\n\n        } catch (error) {\n                console.log(error);\n        }\n}\n\n\n// https://api.themoviedb.org/3/movie/12/reviews?language=en-US&page=1\n\n\n\n\n\n\n\n\n\n\n","import { Link, useLocation } from \"react-router-dom\"\n\nexport const MovieList = ({ data }) => {\n    const location = useLocation();\n    return (\n        <ol>\n           { data && data.map(({id, title}) => <li key={id}><Link to={`/movies/${id}`} state={{from: location}}>{title}</Link></li>)}\n        </ol>\n    )\n}","import React, { useEffect, useState } from \"react\";\nimport { useSearchParams } from 'react-router-dom';\nimport { FetchFilm } from \"components/API/API\";\nimport { MovieList } from \"components/MovieList/MovieList\";\n\n const Movie = () => {\n  const [movies, setMovies] = useState(null);\n  const [query, setQuery] = useSearchParams();\n\n \n  useEffect(() => {\n    const searchQuery = query.get('query');\n    if (searchQuery) FetchFilm(searchQuery).then(setMovies);\n    if (!searchQuery) {\n      setMovies(null);\n      setQuery({});\n    }\n  }, [query, setQuery]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setQuery({\n      query: e.currentTarget.elements.search.value,\n    });\n    e.currentTarget.reset();\n  }\n  \n  \n  return (\n    <>\n      <form className=\"row g-3\" onSubmit={handleSubmit}>\n        <div className=\"col-auto\">\n          <label htmlFor=\"movieSearch\" className=\"visually-hidden\">\n            Film search\n          </label>\n          <input\n            autoComplete=\"off\"\n            type=\"text\"\n            className=\"form-control\"\n            id=\"movieSearch\"\n            placeholder=\"Film search\"\n            name=\"search\"\n          />\n        </div>\n        <div className=\"col-auto\">\n          <button type=\"submit\" className=\"btn btn-primary mb-3\">\n            Search\n          </button>\n        </div>\n        {movies?.length > 0 && (\n        <>\n          <h2>Search results:</h2>\n          <MovieList data={movies} />\n        </>\n      )}\n      </form>\n    </>\n  );\n};\n\nexport default Movie;\n"],"names":["BASE_URL","API_KEY","FetchTrends","axios","response","data","results","console","log","FetchFilm","searchValue","FetchDetails","id","FetchCasts","cast","FetchReview","MovieList","location","useLocation","map","title","to","state","from","useState","movies","setMovies","useSearchParams","query","setQuery","useEffect","searchQuery","get","then","className","onSubmit","e","preventDefault","currentTarget","elements","search","value","reset","htmlFor","autoComplete","type","placeholder","name","length"],"sourceRoot":""}