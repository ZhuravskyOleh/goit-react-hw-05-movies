{"version":3,"file":"static/js/247.aa8b74ca.chunk.js","mappings":"+SACMA,EAAW,gCACXC,EAAU,2CAMT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8GAE+BC,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,8BAAkCC,IAFtE,cAEcG,EAFd,yBAGeA,EAASC,KAAKC,SAH7B,gCAKQC,QAAQC,IAAR,MALR,wFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,iGAEgCP,EAAAA,EAAAA,GAAM,GAAD,OAAKH,EAAL,wBAA+BC,EAA/B,kBAAkDS,EAAlD,+CAFrC,cAEeN,EAFf,yBAGgBA,EAASC,KAAKC,SAH9B,gCAKSC,QAAQC,IAAR,MALT,wFASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,2BAA0CX,IAF/E,cAEeG,EAFf,yBAGgBA,EAASC,MAHzB,gCAKSE,QAAQC,IAAR,MALT,wFASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,mCAAkDX,IAFvF,cAEeG,EAFf,yBAGgBA,EAASC,KAAKS,MAH9B,gCAMSP,QAAQC,IAAR,MANT,wFAUA,SAAeO,EAAtB,kC,aAAO,O,oBAAA,WAA2BH,GAA3B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,0CAAyDX,IAF9F,cAEeG,EAFf,yBAGgBA,EAASC,KAAKC,SAH9B,gCAMSC,QAAQC,IAAR,MANT,gF,8ECNP,UAlCa,WACT,OAA0BQ,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEQN,GAAOO,EAAAA,EAAAA,MAAPP,GAMR,OAJAQ,EAAAA,EAAAA,YAAU,YACNP,EAAAA,EAAAA,IAAWD,GAAIS,KAAKH,EACvB,GAAE,CAACN,KAGA,eAAIU,UAAU,YAAd,SACKL,EAAMM,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,QAAlC,OACP,eAAIL,UAAU,kBAAd,UACI,gBAAKA,UAAU,wBAAf,UACI,iBAAKA,UAAU,OAAOM,MAAO,CAAEC,MAAO,SAAtC,WACI,gBAAKC,IAAKN,EAAY,0CAAsCA,GAAiB,sBAAuBF,UAAU,eAAeS,IAAKN,KAClI,iBAAKH,UAAU,YAAf,WACI,eAAIA,UAAU,YAAd,SAA2BG,KAC3B,eAAGH,UAAU,YAAb,wBAAqCI,cANhBC,EAD9B,KAetB,C","sources":["components/API/API.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'api_key=5fb6b6af9200a303174c78f9afda4cb6'\n\n// export const FetchTrends = () => {\n//         return fetch(`${BASE_URL}trending/movie/day?${API_KEY}`)\n//                 .then(res => res.json());\n// };\nexport async function FetchTrends() {\n       try {\n               const response = await axios(`${BASE_URL}trending/movie/day?${API_KEY}`);\n               return response.data.results;\n       } catch (error) {\n               console.log(error);\n        };\n};\n\nexport async function FetchFilm(searchValue) {\n        try {\n                const response = await axios(`${ BASE_URL }search/movie?${ API_KEY }&query=${ searchValue }&include_adult=false&language=en-US&page=1`);\n                return response.data.results;\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchDetails(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}?language=en-US&${API_KEY}`);\n                return response.data;\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchCasts(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}/credits?language=en-US&${API_KEY}`);\n                return response.data.cast;\n\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchReview(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}/reviews?language=en-US&page=1&${API_KEY}`);\n                return response.data.results;\n\n        } catch (error) {\n                console.log(error);\n        }\n}\n\n\n// https://api.themoviedb.org/3/movie/12/reviews?language=en-US&page=1\n\n\n\n\n\n\n\n\n\n\n","import { FetchCasts } from \"components/API/API\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n    const [casts, setCasts] = useState([]);\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        FetchCasts(id).then(setCasts);\n    }, [id]);\n\n    return (\n        <ul className=\"cast-list\">\n            {casts.map(({ profile_path, name, character, cast_id }) => (\n                <li className=\"list-group-item\" key={cast_id}>\n                    <div className=\"col-sm-6 mb-3 mb-sm-0\">\n                        <div className=\"card\" style={{ width: '14rem' }}>\n                            <img src={profile_path ? `https://image.tmdb.org/t/p/w500/${profile_path}` : \"./images/images.jpg\"} className=\"card-img-top\" alt={name} />\n                            <div className=\"card-body\">\n                                <h5 className=\"card-text\">{name}</h5>\n                                <p className=\"card-text\">Character: {character}</p>\n                            </div>\n                        </div>\n                    </div>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nCast.propTypes = {\n    profile_path: PropTypes.string,\n    name: PropTypes.string,\n    character: PropTypes.string\n};\n\nexport default Cast;\n"],"names":["BASE_URL","API_KEY","FetchTrends","axios","response","data","results","console","log","FetchFilm","searchValue","FetchDetails","id","FetchCasts","cast","FetchReview","useState","casts","setCasts","useParams","useEffect","then","className","map","profile_path","name","character","cast_id","style","width","src","alt"],"sourceRoot":""}